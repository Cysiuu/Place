version: '3.8'

services:
    # Laravel Backend
    backend:
        build:
            context: .
            dockerfile: backend.Dockerfile
        container_name: laravel-backend
        restart: unless-stopped
        volumes:
            - .:/app
            - /app/vendor
            - /app/node_modules
        ports:
            - "8000:8000"
        depends_on:
            - db
        environment:
            DB_CONNECTION: pgsql
            DB_HOST: db
            DB_PORT: 5432
            DB_DATABASE: ${POSTGRES_DB}
            DB_USERNAME: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            APP_ENV: local
            DB_DRIVER: pgsql
        networks:
            - app-network


    # Node.js Frontend
    frontend:
        build:
            context: .
            dockerfile: frontend.Dockerfile
        container_name: node-frontend
        restart: unless-stopped
        volumes:
            - .:/app
            - /app/node_modules
        ports:
            - "5173:5173"
        networks:
            - app-network

    # PostgreSQL Database
    db:
        image: postgres:14-alpine
        container_name: postgres-db
        restart: unless-stopped
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./init-scripts:/docker-entrypoint-init-db.sql
        ports:
            - "${POSTGRES_PORT}:5432"
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    postgres-data:
