version: '3.8'

services:
    # Laravel Backend
    app:
        build:
            context: ./environment/dev/app
            dockerfile: Dockerfile
        container_name: app-place-dev
        restart: unless-stopped
        volumes:
            - .:/app
            - ./environment/dev/app/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./environment/dev/app/php.ini:/usr/local/etc/php/conf.d/zzz-overrides.ini:ro
            - ./environment/dev/app/php-fpm.conf:/usr/local/etc/php-fpm.d/zzz-overrides.conf:ro
            - ./environment/dev/app/supervisord.conf:/etc/supervisor/custom-supervisord.conf:ro
        ports:
            - "8000:80"
            - "5173:5173"
        depends_on:
          db:
            condition: service_healthy
        environment:
            DB_CONNECTION: pgsql
            DB_HOST: db
            DB_PORT: 5432
            DB_DATABASE: ${POSTGRES_DB}
            DB_USERNAME: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            APP_ENV: local
            DB_DRIVER: pgsql
            VITE_ENABLED: 1
        networks:
            - app-network

    # PostgreSQL Database
    db:
        image: postgres:16.3-alpine3.18@sha256:64e18e8fb3e9c9aac89ac590c5dd8306b862478404f76cd9b5f7720d012b4c47
        container_name: postgres-db-app-dev
        restart: unless-stopped
        volumes:
            - postgres-data:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT}:5432"
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        healthcheck:
                test: [ "CMD-SHELL", "pg_isready -d ${DB_DATABASE} -U ${DB_USERNAME}" ]
                interval: 3s
                timeout: 3s
                retries: 5
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    postgres-data:
